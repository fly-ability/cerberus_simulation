<?xml version="1.0"?>
<!--
Copyright 2015 Fadri Furrer, ASL, ETH Zurich, Switzerland
Copyright 2015 Michael Burri, ASL, ETH Zurich, Switzerland
Copyright 2015 Mina Kamel, ASL, ETH Zurich, Switzerland
Copyright 2015 Janosch Nikolic, ASL, ETH Zurich, Switzerland
Copyright 2015 Markus Achtelik, ASL, ETH Zurich, Switzerland

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<robot xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:arg name="include_lights" default="false" />

    <!-- Macro for the inertia of a box -->
    <xacro:include filename="$(find flya_description)/urdf/flya.gazebo" />
    <xacro:macro name="box_inertia" params="x y z mass">

    <inertia ixx="${0.0833333 * mass * (y*y + z*z)}" ixy="0.0" ixz="0.0"
      iyy="${0.0833333 * mass * (x*x + z*z)}" iyz="0.0"
      izz="${0.0833333 * mass * (x*x + y*y)}" />
    </xacro:macro>

    <!-- Macro for the inertial properties of a box -->
    <xacro:macro name="box_inertial" params="x y z mass *origin">
      <inertial>
        <mass value="${mass}" />
        <xacro:insert_block name="origin" />
        <xacro:box_inertia x="${x}" y="${y}" z="${z}" mass="${mass}" />
      </inertial>
    </xacro:macro>

    <!-- Main multirotor link -->
    <xacro:macro name="multirotor_base_macro"
      params="robot_namespace mass body_width body_height use_mesh_file mesh_file *inertia">
      <link name="${robot_namespace}/base_link"></link>

      <joint name="${robot_namespace}/base_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="${robot_namespace}/base_link" />
        <child link="${robot_namespace}/base_link_inertia" />
      </joint>

      <link name="${robot_namespace}/base_link_inertia">
        <inertial>
          <mass value="${mass}" />  <!-- [kg] -->
          <origin xyz="0 0 0" />
          <xacro:insert_block name="inertia" />
        </inertial>

        <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <xacro:if value="${use_mesh_file}">
              <mesh filename="${mesh_file}" scale="1 1 1" />
            </xacro:if>
            <xacro:unless value="${use_mesh_file}">
              <box size="${body_width} ${body_width} ${body_height}"/> <!-- [m] [m] [m] -->
            </xacro:unless>
          </geometry>
        </visual>

        <collision>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <!-- <sphere radius=".02"/> -->
            <!-- <sphere radius=".225"/> -->
            <mesh filename="${collision_file}" scale="1 1 1" />
          </geometry>
        </collision>
      </link>

      <link name="hokuyo">
        <visual>
          <!-- <origin xyz="0.105 0 0.125" rpy="0 0 0"/> -->
          <geometry>
            <mesh filename="package://flya_description/meshes/hokuyo.dae"/>
          </geometry>
        </visual>

        <collision>
          <!-- <origin xyz="0.105 0 0.125" rpy="0 0 0"/> -->
          <geometry>
            <!-- <mesh filename="package://flya_description/meshes/hokuyo.dae"/> -->
            <sphere radius="0.001"/>
          </geometry>
        </collision>

        <inertial>
          <!-- <origin xyz="0.105 0 0.125" rpy="0 0 0"/> -->
          <mass value="0.001"/>
          <inertia
            ixx="0.00001" ixy="0" ixz="0"
            iyy="0.00001" iyz="0"
            izz="0.00001"/>
          </inertial>
        </link>



        <joint name="lidar_joint" type="continuous">
          <axis xyz="1 0 0"/>
          <origin rpy="0 0 0" xyz="0.12 0 0.125"/>
          <parent link="${robot_namespace}/base_link_inertia"/>
          <child link="hokuyo"/>
          <limit effort="10000" velocity="1000"/>
          <dynamics damping="0" friction="0"/>
        </joint>

        <transmission name="simple_trans">
          <type>transmission_interface/SimpleTransmission</type>
          <joint name="lidar_joint">
            <hardwareInterface>EffortJointInterface</hardwareInterface>
          </joint>
          <actuator name="motor1">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>EffortJointInterface</hardwareInterface>
          </actuator>
        </transmission>


        <joint name="camera_joint" type="fixed">
          <origin xyz="0.12 0 -0.15" rpy="0 0 0"/>
          <parent link="${robot_namespace}/base_link_inertia"/>
          <child link="front_camera"/>
        </joint>

        <link name="front_camera">
          <inertial>
            <mass value="0.01"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia
              ixx="1e-6" ixy="0" ixz="0"
              iyy="1e-6" iyz="0"
              izz="1e-6"
              />
            </inertial>
            <visual>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <geometry>
                <box size="0.025 0.025 0.025"/>
              </geometry>
              <material name="Cyan">
                <color rgba="1.0 1.0 1.0 1.0"/>
              </material>
            </visual>
          </link>


          <!-- optical flow -->

          <joint name="of1_joint" type="fixed">
            <origin xyz="0.12 0.12 0.032" rpy="0 ${-M_PI/6} ${0.25 * M_PI}"/>
            <parent link="${robot_namespace}/base_link_inertia"/>
            <child link="of1"/>
          </joint>

          <link name="of1">
            <inertial>
              <mass value="0.01"/>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <inertia
                ixx="1e-6" ixy="0" ixz="0"
                iyy="1e-6" iyz="0"
                izz="1e-6"
                />
              </inertial>
              <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                  <box size="0.005 0.005 0.005"/>
                </geometry>
                <material name="Cyan">
                  <color rgba="1.0 1.0 1.0 1.0"/>
                </material>
              </visual>
            </link>

            <joint name="of2_joint" type="fixed">
              <origin xyz="-0.12 0.12 0.032" rpy="0 ${-M_PI/6} ${0.75 * M_PI}"/>
              <parent link="${robot_namespace}/base_link_inertia"/>
              <child link="of2"/>
            </joint>

            <link name="of2">
              <inertial>
                <mass value="0.01"/>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <inertia
                  ixx="1e-6" ixy="0" ixz="0"
                  iyy="1e-6" iyz="0"
                  izz="1e-6"
                  />
                </inertial>
                <visual>
                  <origin xyz="0 0 0" rpy="0 0 0"/>
                  <geometry>
                    <box size="0.005 0.005 0.005"/>
                  </geometry>
                  <material name="Cyan">
                    <color rgba="1.0 1.0 1.0 1.0"/>
                  </material>
                </visual>
              </link>

              <joint name="of3_joint" type="fixed">
                <origin xyz="-0.12 -0.12 0.032" rpy="0 ${-M_PI/6} ${-0.75 * M_PI}"/>
                <parent link="${robot_namespace}/base_link_inertia"/>
                <child link="of3"/>
              </joint>

              <link name="of3">
                <inertial>
                  <mass value="0.01"/>
                  <origin xyz="0 0 0" rpy="0 0 0"/>
                  <inertia
                    ixx="1e-6" ixy="0" ixz="0"
                    iyy="1e-6" iyz="0"
                    izz="1e-6"
                    />
                  </inertial>
                  <visual>
                    <origin xyz="0 0 0" rpy="0 0 0"/>
                    <geometry>
                      <box size="0.005 0.005 0.005"/>
                    </geometry>
                    <material name="Cyan">
                      <color rgba="1.0 1.0 1.0 1.0"/>
                    </material>
                  </visual>
                </link>

                <joint name="of4_joint" type="fixed">
                  <origin xyz="0.12 -0.12 0.032" rpy="0 ${-M_PI/6} ${-0.25 * M_PI}"/>
                  <parent link="${robot_namespace}/base_link_inertia"/>
                  <child link="of4"/>
                </joint>

                <link name="of4">
                  <inertial>
                    <mass value="0.01"/>
                    <origin xyz="0 0 0" rpy="0 0 0"/>
                    <inertia
                      ixx="1e-6" ixy="0" ixz="0"
                      iyy="1e-6" iyz="0"
                      izz="1e-6"
                      />
                    </inertial>
                    <visual>
                      <origin xyz="0 0 0" rpy="0 0 0"/>
                      <geometry>
                        <box size="0.005 0.005 0.005"/>
                      </geometry>
                      <material name="Cyan">
                        <color rgba="1.0 1.0 1.0 1.0"/>
                      </material>
                    </visual>
                  </link>
          <!-- attach multirotor_base_plugin to the base_link -->


          <gazebo>
            <plugin filename="librotors_gazebo_multirotor_base_plugin.so" name="multirotor_base_plugin">
              <robotNamespace>${robot_namespace}</robotNamespace>
              <linkName>${robot_namespace}/base_link</linkName>
              <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
            </plugin>
          </gazebo>
        </xacro:macro>

        <!-- Rotor joint and link -->
        <xacro:macro name="vertical_rotor"
          params="robot_namespace suffix direction motor_constant moment_constant parent mass_rotor radius_rotor time_constant_up time_constant_down max_rot_velocity motor_number rotor_drag_coefficient rolling_moment_coefficient color use_own_mesh mesh *origin *inertia">
          <joint name="${robot_namespace}/rotor_${motor_number}_joint" type="continuous">
            <xacro:insert_block name="origin" />
            <axis xyz="0 0 1" />
            <!-- TODO(ff): not currently set because it's not yet supported -->
            <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
            <parent link="${parent}" />
            <child link="${robot_namespace}/rotor_${motor_number}" />
          </joint>
          <link name="${robot_namespace}/rotor_${motor_number}">
            <inertial>
              <mass value="${mass_rotor}" /> <!-- [kg] -->
              <xacro:insert_block name="inertia" />
            </inertial>
            <visual>
              <geometry>
                <!-- <cylinder length="0.005" radius="${radius_rotor}"/> --> <!-- [m] -->
                <xacro:if value="${use_own_mesh}">
                  <mesh filename="${mesh}"
                    scale="1 1 1" />
                  </xacro:if>
                  <xacro:unless value="${use_own_mesh}">
                    <mesh filename="package://rotors_description/meshes/propeller_${direction}.dae"
                      scale="${radius_rotor} ${radius_rotor} ${radius_rotor}" /> <!-- The propeller meshes have a radius of 1m -->
                      <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
                    </xacro:unless>
                  </geometry>
                </visual>

                <!-- <collision> No collision
                <geometry>
                <cylinder length="0.005" radius="${radius_rotor}" />
              </geometry>
            </collision> -->
          </link>
          <gazebo>
            <plugin name="${robot_namespace}_${suffix}_motor_model" filename="librotors_gazebo_motor_model.so">
              <robotNamespace>${robot_namespace}</robotNamespace>
              <jointName>${robot_namespace}/rotor_${motor_number}_joint</jointName>
              <linkName>${robot_namespace}/rotor_${motor_number}</linkName>
              <turningDirection>${direction}</turningDirection>
              <timeConstantUp>${time_constant_up}</timeConstantUp>
              <timeConstantDown>${time_constant_down}</timeConstantDown>
              <maxRotVelocity>${max_rot_velocity}</maxRotVelocity>
              <motorConstant>${motor_constant}</motorConstant>
              <momentConstant>${moment_constant}</momentConstant>
              <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
              <motorNumber>${motor_number}</motorNumber>
              <rotorDragCoefficient>${rotor_drag_coefficient}</rotorDragCoefficient>
              <rollingMomentCoefficient>${rolling_moment_coefficient}</rollingMomentCoefficient>
              <motorSpeedPubTopic>motor_speed/${motor_number}</motorSpeedPubTopic>
              <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
            </plugin>
          </gazebo>
          <gazebo reference="${robot_namespace}/rotor_${motor_number}">
            <material>Gazebo/${color}</material>
          </gazebo>
        </xacro:macro>
        <!-- <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      </plugin>
    </gazebo> -->
    <!--  -->

    <xacro:property name="M_PI" value="3.14159"/>

    <xacro:if value="$(arg include_lights)" >
      <xacro:include filename="$(find subt_description)/urdf/flashlight.urdf.xacro" />

      <xacro:flashlight
        flashlight_prefix="mid"
        parent_link="${namespace}/base_link_inertia"
        xyz="0.15 0 0"
        rpy="0 0 0">
        <plugin_params></plugin_params>
      </xacro:flashlight>

      <xacro:flashlight
        flashlight_prefix="right"
        parent_link="${namespace}/base_link_inertia"
        xyz="0.15 0.1 0"
        rpy="0 0 ${M_PI/8}">
        <plugin_params></plugin_params>
      </xacro:flashlight>

      <xacro:flashlight
        flashlight_prefix="left"
        parent_link="${namespace}/base_link_inertia"
        xyz="0.15 -0.1 0"
        rpy="0 0 ${-M_PI/8}">
        <plugin_params></plugin_params>
      </xacro:flashlight>


      <!-- <xacro:include filename="$(find subt_description)/urdf/led.urdf.xacro" />
      <xacro:led led_prefix="right"
        parent_link="${namespace}/base_link_inertia"
        xyz="1 0.3 0"
        rpy="0 ${M_PI/2} 0">
        <params>
          <duration>10</duration>
          <interval>0</interval>
          <color>1 1 1</color>
        </params>
      </xacro:led> -->
    </xacro:if>

  </robot>
